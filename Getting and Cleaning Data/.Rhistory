library(KernSmooth)
setwd("~/DataScienceExtension/Coursera/R")
?mean
install.packages('quantmod')
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign = FALSE)
amzn
amzn = getSymbols("AMZN")
?getSymbols
library(quantmod)
amzn =getSymbols("AMZN", auto.assign=FALSE)
install.packages(c('rpart','d3r','partykit','jsonlite','TTR','forecast','tseries','colorspace'))
install.packages(c("rpart", "d3r", "partykit", "jsonlite", "TTR", "forecast", "tseries", "colorspace"))
install.packages(c("rpart", "d3r", "partykit", "jsonlite", "TTR", "forecast", "tseries", "colorspace"))
install.packages(c("rpart", "d3r", "partykit", "jsonlite", "TTR", "forecast", "tseries", "colorspace"))
library(Rserve)
install.packages('Rserve')
library(Rserve)
Rserve()
library(Rserve)
install.packages('Rserve')
install.packages("Rserve")
install.packages(c('jsonlite','tseries','forecast','tm','dplyr','SnowballC','cluster','rpart','d3r','partykit'), lib='D:\R\R-3.4.3\library')
install.packages(c('jsonlite','tseries','forecast','tm','dplyr','SnowballC','cluster','rpart','d3r','partykit'), lib='D:\\R\R-3.4.3\library')
install.packages(c('jsonlite','tseries','forecast','tm','dplyr','SnowballC','cluster','rpart','d3r','partykit'), lib='D:\R\R-3.4.3\library')
install.packages(c('jsonlite','tseries','forecast','tm','dplyr','SnowballC','cluster','rpart','d3r','partykit'), lib='D:\\R\R-3.4.3\library')
install.packages(c('jsonlite','tseries','forecast','tm','dplyr','SnowballC','cluster','rpart','d3r','partykit'), lib='D:/R/R-3.4.3/library')
install.packages(c("jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit"), lib = "D:/R/R-3.4.3/library")
install.packages(c("jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit"), lib = "D:/R/R-3.4.3/library")
install.packages(c("jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit"), lib = "D:/R/R-3.4.3/library")
install.packages(c("jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit"), lib = "D:/R/R-3.4.3/library")
install.packages(c("jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit"), lib = "D:/R/R-3.4.3/library")
install.packages('RevoUtilsMath')
library('Rserve')
Rserve()
library('Rserve')
Rserve()
remove.packages(Rserve)
library("assertthat", lib.loc="~/R/win-library/3.3")
library("colorspace", lib.loc="~/R/win-library/3.3")
detach("package:colorspace", unload=TRUE)
library("BH", lib.loc="~/R/win-library/3.3")
library("colorspace", lib.loc="~/R/win-library/3.3")
library("d3r", lib.loc="~/R/win-library/3.3")
library("DBI", lib.loc="~/R/win-library/3.3")
remove.packages("assertthat", lib="~/R/win-library/3.3")
remove.packages("BH", lib="~/R/win-library/3.3")
remove.packages("BH", lib="~/R/win-library/3.3")
remove.packages("colorspace", lib="~/R/win-library/3.3")
remove.packages("d3r", lib="~/R/win-library/3.3")
remove.packages("DBI", lib="~/R/win-library/3.3")
remove.packages("dichromat", lib="~/R/win-library/3.3")
remove.packages("digest", lib="~/R/win-library/3.3")
remove.packages("dplyr", lib="~/R/win-library/3.3")
remove.packages("forecast", lib="~/R/win-library/3.3")
remove.packages("Formula", lib="~/R/win-library/3.3")
remove.packages("fracdiff", lib="~/R/win-library/3.3")
remove.packages("ggplot2", lib="~/R/win-library/3.3")
remove.packages("gtable", lib="~/R/win-library/3.3")
remove.packages("htmltools", lib="~/R/win-library/3.3")
remove.packages("jsonlite", lib="~/R/win-library/3.3")
remove.packages("labeling", lib="~/R/win-library/3.3")
remove.packages("lazyeval", lib="~/R/win-library/3.3")
remove.packages("magrittr", lib="~/R/win-library/3.3")
remove.packages("munsell", lib="~/R/win-library/3.3")
remove.packages("partykit", lib="~/R/win-library/3.3")
remove.packages("plyr", lib="~/R/win-library/3.3")
remove.packages("purrr", lib="~/R/win-library/3.3")
remove.packages("quadprog", lib="~/R/win-library/3.3")
remove.packages("quantmod", lib="~/R/win-library/3.3")
remove.packages("RColorBrewer", lib="~/R/win-library/3.3")
remove.packages("Rcpp", lib="~/R/win-library/3.3")
remove.packages("RcppArmadillo", lib="~/R/win-library/3.3")
remove.packages("Rserve", lib="~/R/win-library/3.3")
remove.packages("reshape2", lib="~/R/win-library/3.3")
remove.packages("stringi", lib="~/R/win-library/3.3")
remove.packages("scales", lib="~/R/win-library/3.3")
remove.packages("stringr", lib="~/R/win-library/3.3")
remove.packages("tibble", lib="~/R/win-library/3.3")
remove.packages("tidyr", lib="~/R/win-library/3.3")
remove.packages("timeDate", lib="~/R/win-library/3.3")
remove.packages("tseries", lib="~/R/win-library/3.3")
remove.packages("TTR", lib="~/R/win-library/3.3")
remove.packages("xts", lib="~/R/win-library/3.3")
remove.packages("zoo", lib="~/R/win-library/3.3")
library("boot", lib.loc="C:/Program Files/Microsoft/R Client/R_SERVER/library")
detach("package:boot", unload=TRUE)
.libPaths()
install.packages(Rserve)
install.packages('Rserve')
install.packages("Rserve")
install.packages(c("Rserve", "jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit", "TTR", "colorspace"), lib="C:/Program Files/Microsoft/R Client/R_SERVER/library")
install.packages(c("Rserve", "jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit", "TTR", "colorspace"), lib = "C:/Program Files/Microsoft/R Client/R_SERVER/library")
install.packages(c("Rserve", "jsonlite", "tseries", "forecast", "tm", "dplyr", "SnowballC", "cluster", "rpart", "d3r", "partykit", "TTR", "colorspace"), lib = "C:/Program Files/Microsoft/R Client/R_SERVER/library")
install.packages('jsonlite')
install.packages("jsonlite", lib="C:/Program Files/Microsoft/R Client/R_SERVER/library")
library(dplyr)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="C:/Program Files/Microsoft/R Client/R_SERVER/library")
library(swirl)
library(swirl)
install.packages(swirl)
install.packages('swirl')
install.packages('dplyr')
install.packages('ggplot2')
install.packages('rpart')
install.packages("rpart")
install.packages("rpart")
library(dplyr)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
tbl_df(mydf)
bran <- tbl_df(mydf)
cran <- tbl_df(mydf)
rm("df")
setwd('D:/Coursera/Getting and Cleaning Data/')
exit()
pause()
bye()
setwd('D:/Coursera/Getting and Cleaning Data/')
features <- read.table('./data/UCI HAR Dataset/features.txt')
X_train <- read.table('./data/UCI HAR Dataset/train/X_train.txt', col.names = features$V2)
install.packages('jsonlite', dependecies=T)
install.packages("jsonlite", dependecies = T)
install.packages("jsonlite", dependecies = T)
install.packages('jsonlite', dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("jsonlite", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages(tseries,dependencies=T)
install.packages("tseries", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("forecast", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("tm", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("dplyr", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("SnowballC", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("cluster", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("rpart", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("rpart", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("rpart", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("d3r", dependencies = TRUE, repos = "http://cran.rstudio.com/")
install.packages("partykit", dependencies = TRUE, repos = "http://cran.rstudio.com/")
setwd('D:/Coursera/Getting and Cleaning Data/')
features <- read.table('./data/UCI HAR Dataset/features.txt')
X_train <- read.table('./data/UCI HAR Dataset/train/X_train.txt', col.names = features$V2)
y_train <- read.table('./data/UCI HAR Dataset/train/y_train.txt')
X_test <- read.table('./data/UCI HAR Dataset/test/X_test.txt', col.names = features$V2)
y_test <- read.table('./data/UCI HAR Dataset/test/y_test.txt')
full_train <- cbind(activity = y_train, X_train)
head(full_train)
full_test <- cbind(activity = y_test, X_test)
full_table <- rbind(full_train, full_test)
full_table$V1 <- gsub('1', 'walking', full_table$V1)
full_table$V1 <- gsub('2', 'walking upstairs', full_table$V1)
full_table$V1 <- gsub('3', 'walking downstairs', full_table$V1)
full_table$V1 <- gsub('4', 'sitting', full_table$V1)
full_table$V1 <- gsub('5', 'standing', full_table$V1)
full_table$V1 <- gsub('6', 'laying', full_table$V1)
names(full_table) <- gsub('V1', 'activity', names(full_table))
match <- c('activity','[Mm]ean','std')
full_table <- full_table[grep(paste(match, collapse = '|'), names(full_table))]
names(full_table) <- gsub('^t', 'time of ', names(full_table))
names(full_table) <- gsub('^f', 'fft of ', names(full_table))
names(full_table) <- gsub('Gyro', ' angular acceleration ', names(full_table))
names(full_table) <- gsub('Acc', ' acceleration ', names(full_table))
names(full_table) <- gsub('Mag', 'magnitude', names(full_table))
names(full_table) <- gsub('Jerk', 'jerk ', names(full_table))
names(full_table) <- gsub('std', 'standard deviation', names(full_table))
names(full_table) <- gsub('Freq', ' frequency', names(full_table))
names(full_table) <- gsub('Body', 'body', names(full_table))
names(full_table) <- gsub('[Mm]ean', ' mean', names(full_table))
names(full_table) <- gsub('\\.', '', names(full_table))
names(full_table) <- gsub('X', ' axis-x ', names(full_table))
names(full_table) <- gsub('Y', ' axis-y ', names(full_table))
names(full_table) <- gsub('Z', ' axis-z ', names(full_table))
names(full_table)
library(dplyr)
tbl_df(full_table)
df <- tbl_df(full_table)
general_mean <- aggregate(df, by=list(full_table$activity), FUN=mean)
general_mean
select(general_mean, -activity)
general_mena <- select(general_mean, -activity)
general_mean <- select(general_mean, -activity)
names(general_mean) <- gsub('V1', 'activity', names(general_mean))
names(general_mean) <- gsub('Group.1', 'activity', names(general_mean))
head(general_mean)
write.table('tidy_dataset.txt', row.names = FALSE)
write.table('D:/Coursera/Getting and Cleaning Data/tidy_dataset.txt', row.names = FALSE)
head(general_mean)
write.table('D:/Coursera/Getting and Cleaning Data/tidy_dataset.txt', row.names = FALSE)
getwd()
write.table('tidy_dataset.txt', row.names = FALSE)
getwd()
ls()
?write.table
write.table(general_mean,file='tidy_dataset.txt', row.names = FALSE)
ls()
.libPaths()
.libPaths(c("D:/R/R-3.4.3/library", .libPaths()))
.libPaths()
library("jsonlite", lib.loc="~/R/win-library/3.3")
remove.packages("jsonlite", lib="~/R/win-library/3.3")
remove.packages("jsonlite", lib="C:/Program Files/Microsoft/R Client/R_SERVER/library")
?install.packages
?Sys
?Sys.setenv
Sys.getenv()
setwd('D:/Coursera/Getting and Cleaning Data/')
features <- read.table('../data/UCI HAR Dataset/features.txt')
features <- read.table('./../data/UCI HAR Dataset/features.txt')
features <- read.table('./data/UCI HAR Dataset/features.txt')
X_train <- read.table('./data/UCI HAR Dataset/train/X_train.txt', col.names = features$V2)
y_train <- read.table('./data/UCI HAR Dataset/train/y_train.txt')
X_test <- read.table('./data/UCI HAR Dataset/test/X_test.txt', col.names = features$V2)
y_test <- read.table('./data/UCI HAR Dataset/test/y_test.txt')
full_train <- cbind(activity = y_train, X_train)
full_test <- cbind(activity = y_test, X_test)
full_table <- rbind(full_train, full_test)
full_table$V1 <- gsub('1', 'walking', full_table$V1)
full_table$V1 <- gsub('2', 'walking upstairs', full_table$V1)
full_table$V1 <- gsub('3', 'walking downstairs', full_table$V1)
full_table$V1 <- gsub('4', 'sitting', full_table$V1)
full_table$V1 <- gsub('5', 'standing', full_table$V1)
full_table$V1 <- gsub('6', 'laying', full_table$V1)
names(full_table) <- gsub('V1', 'activity', names(full_table))
match <- c('activity','[Mm]ean','std')
full_table <- full_table[grep(paste(match, collapse = '|'), names(full_table))]
names(full_table) <- gsub('^t', 'time of ', names(full_table))
names(full_table) <- gsub('Acc', ' acceleration ', names(full_table))
names(full_table) <- gsub('^f', 'fft of ', names(full_table))
names(full_table) <- gsub('Gyro', ' angular acceleration ', names(full_table))
names(full_table) <- gsub('Mag', 'magnitude', names(full_table))
names(full_table) <- gsub('Jerk', 'jerk ', names(full_table))
names(full_table) <- gsub('std', 'standard deviation', names(full_table))
names(full_table) <- gsub('Freq', ' frequency', names(full_table))
names(full_table) <- gsub('Body', 'body', names(full_table))
names(full_table) <- gsub('[Mm]ean', ' mean', names(full_table))
names(full_table) <- gsub('\\.', '', names(full_table))
names(full_table) <- gsub('X', ' axis-x ', names(full_table))
names(full_table) <- gsub('Y', ' axis-y ', names(full_table))
names(full_table) <- gsub('Z', ' axis-z ', names(full_table))
library(dplyr)
df <- tbl_df(full_table)
general_mean <- aggregate(df, by=list(full_table$activity), FUN=mean)
general_mean <- select(general_mean, -activity)
names(general_mean) <- gsub('Group.1', 'activity', names(general_mean))
head(general_mean)
write.table(general_mean,file='./Assignment/tidy_dataset.txt', row.names = FALSE)
View(full_table)
View(full_test)
View(X_train)
str(y_train)
subject_train <- read.table('./data/UCI HAR Dataset/test/subject_train.txt')
str(subject_train)
subject_train <- read.table('./data/UCI HAR Dataset/test/subject_train.txt')
setwd('D:/Coursera/Getting and Cleaning Data/')
subject_train <- read.table('./data/UCI HAR Dataset/test/subject_train.txt')
subject_train <- read.table('./data/UCI HAR Dataset/train/subject_train.txt')
str(subject_train)
subject_test <- read.table('./data/UCI HAR Dataset/train/subject_test.txt')
full_train <- cbind(activity = y_train, subject=subject_train, X_train)
head(full_train)
?cbind
full_test <- cbind(activity = y_test, subject=subject_test, X_test)
str(full_test)
str(full_train)
full_train <- cbind(subject=subject_train, activity = y_train, X_train)
str(full_train)
full_test <- cbind(subject=subject_test, activity = y_test, X_test)
subject_test <- read.table('./data/UCI HAR Dataset/test/subject_test.txt')
str(subject_test)
full_test <- cbind(subject=subject_test, activity = y_test, X_test)
str(full_test)
full_table[1] <- gsub('1', 'walking', full_table$V1)
head(full_table)
str(full_table)
full_train <- cbind(subject=subject_train, activity = y_train, X_train)
full_test <- cbind(subject=subject_test, activity = y_test, X_test)
full_table <- rbind(full_train, full_test)
str(full_table)
full_table$V1
full_table$V2
full_table[1]
full_table[[1]]
full_table[[2]]
full_table[[2]] <- gsub('1', 'walking', full_table[[2]])
full_table[[2]] <- gsub('2', 'walking upstairs', full_table[[2]])
full_table[[2]] <- gsub('3', 'walking downstairs', full_table[[2]])
full_table[[2]] <- gsub('4', 'sitting', full_table[[2]])
full_table[[2]] <- gsub('5', 'standing', full_table[[2]])
full_table[[2]] <- gsub('6', 'laying', full_table[[2]])
head(full_table)
str(full_table)
names(full_table[[2]])
names(full_table[2])
names(full_table[2]) <- gsub('V1', 'activity', names(full_table[2]))
str(full_table)
names(full_table[2])
str(full_table)
names(full_table[2]) = 'activity'
str(full_table)
names(full_table[2]) <- 'activity'
str(full_table)
colnames(full_table[2])
colnames(full_table)[2]
colnames(full_table)[2] <- 'activity'
str(full_table)
colnames(full_table)[1] <- 'subject'
str(full_table)
match <- c('subject','activity','[Mm]ean','std')
full_table <- full_table[grep(paste(match, collapse = '|'), names(full_table))]
str(full_table)
names(full_table) <- gsub('^t', 'time of ', names(full_table))
names(full_table) <- gsub('^f', 'fft of ', names(full_table))
names(full_table) <- gsub('Acc', ' acceleration ', names(full_table))
names(full_table) <- gsub('Mag', 'magnitude', names(full_table))
names(full_table) <- gsub('Gyro', ' angular acceleration ', names(full_table))
names(full_table) <- gsub('Jerk', 'jerk ', names(full_table))
names(full_table) <- gsub('Freq', ' frequency', names(full_table))
names(full_table) <- gsub('Body', 'body', names(full_table))
names(full_table) <- gsub('[Mm]ean', ' mean', names(full_table))
names(full_table) <- gsub('std', 'standard deviation', names(full_table))
names(full_table) <- gsub('X', ' axis-x ', names(full_table))
names(full_table) <- gsub('\\.', '', names(full_table))
names(full_table) <- gsub('Y', ' axis-y ', names(full_table))
names(full_table) <- gsub('Z', ' axis-z ', names(full_table))
names(full_table)
library(dplyr)
df <- tbl_df(full_table)
general_mean <- aggregate(df, by=list(full_table$activity), FUN=mean)
head(general_mean)
general_mean <- aggregate(df, by=list(full_table$subject), FUN=mean)
head(general_mean)
summarise_all(-subject,mean)
df %>%
group_by(subject, activity)
head(df)
write.table(df,file='./Assignment/tidy_dataset.txt', row.names = FALSE)
df
df %>%
group_by(subject, activity)
summarise(-activity,mean)
df %>%
group_by(subject, activity)
df %>%
group_by(subject, activity)
df %>%
group_by( activity,subject)
df %>%
group_by( activity,subject) %>%
summarise(mean)
df %>%
group_by(activity,subject) %>%
summarise(-subject,mean)
df %>%
group_by(activity,subject) %>%
summarise(-subject,mean)
df %>%
group_by(subject, activity) %>%
summarise(-subject,mean)
df %>%
group_by(subject, activity) %>%
summarise(subject,mean)
df %>%
group_by(subject, activity) %>%
summarise_all(mean)
df <- df %>%
group_by(subject, activity) %>%
summarise_all(mean)
head(df)
head(df, n+20)
head(df, n=20)
write.table(df,file='./Assignment/tidy_dataset.txt', row.names = FALSE)
str(subject_train)
str(X_train)
str(y_test)
